{"version":3,"sources":["webpack:///src/app/settings/settings.page.html","webpack:///src/app/settings/settings-routing.module.ts","webpack:///src/app/settings/settings.module.ts","webpack:///src/app/settings/settings.page.scss","webpack:///src/app/settings/settings.page.ts"],"names":["routes","path","component","SettingsPageRoutingModule","imports","forChild","exports","SettingsPageModule","declarations","SettingsPage","translate","common","authService","fcm","ss","settings","langArr","lang","user","getLang","getSettings","subscribe","res","payload","val","getUserData","then","getUser","uid","valueChanges","changeLang","window","open","driverSupportURL","console","log","isPushEnabled","undefined","getToken","token","update","pushToken","err","selector","template"],"mappings":"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","file":"settings-settings-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"dark\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>{{ 'SETTINGS' | translate}}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-list lines=\\\"none\\\">\\n    <ion-item>\\n      <ion-avatar slot=\\\"start\\\">\\n        <img src=\\\"{{user.photoURL}}\\\" onerror=\\\"this.src='./assets/img/default.png'\\\" />\\n      </ion-avatar>\\n      <ion-label>\\n        <h3 style=\\\"font-weight: 500;\\\">{{user.name}}</h3>\\n        <p>{{user.phoneNumber}}</p>\\n      </ion-label>\\n      <ion-button slot=\\\"end\\\" color=\\\"dark\\\" fill=\\\"outline\\\" routerLink=\\\"/profile\\\">{{'EDIT' | translate}}</ion-button>\\n    </ion-item>\\n    <ion-item>\\n      <ion-icon slot=\\\"start\\\" name=\\\"globe\\\"></ion-icon>\\n      <ion-label>\\n        <h3>{{'LANGUAGE' | translate}}</h3>\\n        <p>{{'CHANGE_LANGUAGE' | translate}}</p>\\n      </ion-label>\\n      <ion-select placeholder=\\\"Language\\\" (ionChange)=\\\"changeLang()\\\" [(ngModel)]=\\\"lang\\\" slot=\\\"end\\\">\\n        <ion-select-option *ngFor=\\\"let lang of langArr\\\" value=\\\"{{lang.code}}\\\">{{lang.name}}</ion-select-option>\\n      </ion-select>\\n    </ion-item>\\n    <ion-item>\\n      <ion-icon slot=\\\"start\\\" name=\\\"notifications\\\"></ion-icon>\\n      <ion-label>\\n        <h3>{{'PUSH_NOTIFICATION' | translate}}</h3>\\n        <p>{{'PUSH_NOTIFICATION_TEXT' | translate}}</p>\\n      </ion-label>\\n      <ion-toggle slot=\\\"end\\\" (click)=\\\"change()\\\" [(ngModel)]=\\\"user.isPushEnabled\\\"></ion-toggle>\\n    </ion-item>\\n    <ion-item (click)=\\\"openSupport()\\\">\\n      <ion-icon slot=\\\"start\\\" name=\\\"help-buoy\\\"></ion-icon>\\n      <ion-label>\\n        {{'HELP' | translate}}\\n      </ion-label>\\n    </ion-item>\\n  </ion-list>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SettingsPage } from './settings.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SettingsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SettingsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SettingsPageRoutingModule } from './settings-routing.module';\n\nimport { SettingsPage } from './settings.page';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SettingsPageRoutingModule,\n    TranslateModule\n  ],\n  declarations: [SettingsPage]\n})\nexport class SettingsPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NldHRpbmdzL3NldHRpbmdzLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CommonService } from '../services/common.service';\nimport { environment } from \"../../environments/environment.prod\";\nimport { AuthService } from '../services/auth.service';\nimport { FirebaseX } from '@ionic-native/firebase-x/ngx';\nimport { SettingService } from '../services/setting.service';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.page.html',\n  styleUrls: ['./settings.page.scss'],\n})\nexport class SettingsPage implements OnInit {\n  settings: any = {};\n  langArr = [];\n  lang = 'en';\n  user: any = {};\n\n  constructor(\n    private translate: TranslateService,\n    private common: CommonService,\n    private authService: AuthService,\n    private fcm: FirebaseX,\n    private ss: SettingService\n  ) {\n\n    this.langArr = environment.langArr;\n    this.lang = this.common.getLang();\n    this.ss.getSettings().subscribe(res => res != null ? this.settings = res.payload.val() : this.settings = {});\n  }\n\n  ngOnInit() {\n    this.authService.getUserData().then((user) => {\n      this.authService.getUser(user.uid).valueChanges().subscribe(user => this.user = user)\n    });\n  }\n\n  changeLang() {\n    this.common.changeLang(this.lang);\n  }\n\n  openSupport() {\n    window.open(this.settings.driverSupportURL, \"_blank\");\n  }\n\n  change() {\n    console.log(this.user.isPushEnabled);\n    if (this.user.isPushEnabled == false || this.user.isPushEnabled == undefined) {\n      this.fcm.getToken().then(token => {\n        this.authService.getUser(this.user.uid).update({ isPushEnabled: true, pushToken: token });\n      }).catch(err => {\n        console.log(err);\n        this.authService.getUser(this.user.uid).update({ isPushEnabled: false, pushToken: null });\n      });\n    }\n    else {\n      this.authService.getUser(this.user.uid).update({ isPushEnabled: false, pushToken: null });\n    }\n  }\n\n}"]}